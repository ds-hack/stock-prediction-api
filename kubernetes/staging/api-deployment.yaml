# Staging環境では、clusterIP Serviceを使ってAPIにアクセスする
# 外部にAPIを公開する必要が出てきた場合には、LoadBalancer Serviceを活用する予定だが、
# 料金も高いので現時点ではフロントのみを公開予定
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: dshack-staging
  name: dshack-api-configmap
  labels:
    env: stg
data:
  POSTGRES_HOST: postgres-sts-0.postgres-svc.dshack-staging.svc.cluster.local
  POSTGRES_PORT: "5432"
---
apiVersion: v1
kind: Service
metadata:
  namespace: dshack-staging
  name: dshack-api-svc
  labels:
    env: stg
spec:
  type: ClusterIP
  selector:
    app: dshack-api-app
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dshack-staging
  name: dshack-api-app
  labels:
    env: stg
spec:
  selector:
    matchLabels:
      app: dshack-api-app
  replicas: 1
  template:
    metadata:
      labels:
        app: dshack-api-app
    spec:
      containers:
      - name: dshack-api-app
        image: dshacks/dshack-api-app-development
        ports:
        - containerPort: 8080
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: dbname
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        envFrom:
          - configMapRef:
              name: dshack-api-configmap